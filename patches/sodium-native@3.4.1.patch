diff --git a/binding.c b/binding.c
index d05f87ceb0b981fa3c6c74451403b76eb9fb4788..c14170d5f7cf046a05732eaf54da02e2bc15349b 100644
--- a/binding.c
+++ b/binding.c
@@ -1,4 +1,5 @@
 #define NAPI_EXPERIMENTAL
+#define NODE_API_EXPERIMENTAL_NOGC_ENV_OPT_OUT
 #include <node_api.h>
 #include <string.h>
 #include <assert.h>
diff --git a/deps/bin.js b/deps/bin.js
index 086a7575961ffab16857ac03cdf5dd903b4d7987..1b8a9ab2bc8e93da3379182642665282b01c8691 100755
--- a/deps/bin.js
+++ b/deps/bin.js
@@ -112,7 +112,11 @@ async function nodeGyp () {
 async function buildUnix () {
   if (!(await flag('build', UNIX_OUT))) return
 
-  await run(['./configure', '--prefix=' + TMP_OUT, '--enable-static', '--with-pic', '--disable-pie'], { cwd: SRC })
+  const extraConfigureArgs = ARCH !== os.arch() && ARCH.includes('arm64') && os.platform() === 'darwin'
+      ? [`--host=arm64-apple-darwin`] // "cross compilation" case
+      : [];
+  if (extraConfigureArgs.length) await run(['./autogen.sh', '-s'], { cwd: SRC });
+  await run(['./configure', '--prefix=' + TMP_OUT, '--enable-static', '--with-pic', '--disable-pie', ...extraConfigureArgs], { cwd: SRC })
   await run(['make', 'clean'], { cwd: SRC })
   await run(['make', 'install'], { cwd: SRC })
 
@@ -201,12 +205,16 @@ function arg (name) {
 
 function run (cmd, opts = {}) {
   return new Promise((resolve) => {
+    const now = Date.now();
+    const out = require('fs').openSync(`${now}-out-deps-cmd-out.log`, 'a');
+    const err = require('fs').openSync(`${now}-err-deps-cmd-out.log`, 'a');
+    require('fs').writeSync(out, cmd.join(' ') + require('os').EOL);
     const proc = child.spawn(cmd[0], cmd.slice(1), {
       cwd: opts.cwd || __dirname,
       stdio: [
         opts.stdin ? 'pipe' : 'ignore',
-        QUIET ? 'ignore' : 2,
-        QUIET ? 'ignore' : 2
+        out,
+        err,
       ],
       env: { MACOSX_DEPLOYMENT_TARGET, ...process.env }
     })
