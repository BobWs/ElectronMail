diff --git a/dist-raw/node-internal-modules-esm-resolve.js b/dist-raw/node-internal-modules-esm-resolve.js
index 2fbd832e1422cea1fb26fb8d480df5b914b14cc8..962361e88c48a7df840ca4162769635be105672e 100644
--- a/dist-raw/node-internal-modules-esm-resolve.js
+++ b/dist-raw/node-internal-modules-esm-resolve.js
@@ -307,11 +307,10 @@ function resolveExtensions(search) {
 
 /** This replaces JS with TS extensions */
 function resolveReplacementExtensions(search) {
-  const lastDotIndex = search.pathname.lastIndexOf('.');
-  if(lastDotIndex >= 0) {
-    const ext = search.pathname.slice(lastDotIndex);
+  const ext = require('path').parse(search.pathname).ext;
+  if(ext) {
     if (ext === '.js' || ext === '.jsx' || ext === '.mjs' || ext === '.cjs') {
-      const pathnameWithoutExtension = search.pathname.slice(0, lastDotIndex);
+      const pathnameWithoutExtension = search.pathname.slice(0, search.pathname.length - ext.length);
       const replacementExts =
         ext === '.js' ? replacementsForJs
         : ext === '.jsx' ? replacementsForJsx
@@ -324,6 +323,9 @@ function resolveReplacementExtensions(search) {
         if (fileExists(guess)) return guess;
       }
     }
+  } else {
+      const indexFile = `${search}/index.ts`;
+      return fileExists(indexFile) ? indexFile : `${search}.ts`;
   }
   return undefined;
 }
diff --git a/dist-raw/node-options.js b/dist-raw/node-options.js
index 22722755d06efb5b7748a39fb1d171f867d409bb..fa23d2aa5f2a13deeedc9f97a1ff53d4ea78f9e6 100644
--- a/dist-raw/node-options.js
+++ b/dist-raw/node-options.js
@@ -99,5 +99,11 @@ function getOptionValuesFromOtherEnvVars() {
   if(process.env.NODE_PENDING_DEPRECATION === '1') {
     options['--pending-deprecation'] = true;
   }
+  if (process.env.npm_config_node_options) {
+    const errors = [];
+    const envArgv = ParseNodeOptionsEnvVar(process.env.npm_config_node_options, errors);
+    if (errors.length) throw new Error(String(errors));
+    Object.assign(options, parseArgv(envArgv));
+  }
   return options;
 }