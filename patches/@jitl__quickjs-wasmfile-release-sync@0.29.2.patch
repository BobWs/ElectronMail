diff --git a/dist/emscripten-module.mjs b/dist/emscripten-module.mjs
index 31e0afd5bd1262012ace46313dda70e698fc9e5e..02aa6adab43646e53019fa63e89d4d20e5591793 100644
--- a/dist/emscripten-module.mjs
+++ b/dist/emscripten-module.mjs
@@ -1,12 +1,12 @@
 
 var QuickJSRaw = (() => {
-  var _scriptName = import.meta.url;
+  var _scriptName;
   
   return (
 async function(moduleArg = {}) {
   var moduleRtn;
 
-var c=Object.assign({},moduleArg),f,n,aa=new Promise((a,b)=>{f=a;n=b}),p="object"==typeof window,r="function"==typeof importScripts,u="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node;if(u){const {createRequire:a}=await import("module");var require=a(import.meta.url)}function v(a){a={log:a||function(){}};for(const b of v.za)b(a);return c.quickJSEmscriptenExtensions=a}v.za=[];c.quickjsEmscriptenInit=v;
+var c=Object.assign({},moduleArg),f,n,aa=new Promise((a,b)=>{f=a;n=b}),p="object"==typeof window,r="function"==typeof importScripts,u="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node;function v(a){a={log:a||function(){}};for(const b of v.za)b(a);return c.quickJSEmscriptenExtensions=a}v.za=[];c.quickjsEmscriptenInit=v;
 v.za.push(a=>{a.getWasmMemory=function(){return w}});var x=Object.assign({},c),y="./this.program",z="",A,B,C;
 if(u){var fs=require("fs"),D=require("path");z=require("url").fileURLToPath(new URL("./",import.meta.url));A=(a,b)=>{a=E(a)?new URL(a):D.normalize(a);return fs.readFileSync(a,b?void 0:"utf8")};C=a=>{a=A(a,!0);a.buffer||(a=new Uint8Array(a));return a};B=(a,b,d,e=!0)=>{a=E(a)?new URL(a):D.normalize(a);fs.readFile(a,e?void 0:"utf8",(g,h)=>{g?d(g):b(e?h.buffer:h)})};!c.thisProgram&&1<process.argv.length&&(y=process.argv[1].replace(/\\/g,"/"));process.argv.slice(2)}else if(p||r)r?z=self.location.href:
 "undefined"!=typeof document&&document.currentScript&&(z=document.currentScript.src),_scriptName&&(z=_scriptName),z.startsWith("blob:")?z="":z=z.substr(0,z.replace(/[?#].*/,"").lastIndexOf("/")+1),A=a=>{var b=new XMLHttpRequest;b.open("GET",a,!1);b.send(null);return b.responseText},r&&(C=a=>{var b=new XMLHttpRequest;b.open("GET",a,!1);b.responseType="arraybuffer";b.send(null);return new Uint8Array(b.response)}),B=(a,b,d)=>{var e=new XMLHttpRequest;e.open("GET",a,!0);e.responseType="arraybuffer";e.onload=
